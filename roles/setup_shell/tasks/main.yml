---
- name: "Set up files"
  ansible.builtin.find:
    paths: "{{ role_path }}/files"
    file_type: file
    hidden: true
    recurse: true
  register: files

- name: "Download Oh My Zsh"
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh"
    dest: "/tmp/ohmyzsh.sh"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: '755'

- name: "Install Oh My Zsh"
  ansible.builtin.shell: |
    set -o pipefail && su {{ item.user }} -c 'unset ZSH; cat /tmp/ohmyzsh.sh | grep -v "zsh -l" | sh'
  args:
    creates: "{{ item.home }}/.oh-my-zsh"
  loop: "{{ setup_shell_users }}"
  loop_control:
    label: " Install for {{ item.user }}"
  become: true

- name: "Install plugins"
  ansible.builtin.git:
    repo: "{{ item.1.url }}"
    dest: "{{ item.0.home }}/.oh-my-zsh/custom/plugins/{{ item.1.plugin }}"
    clone: "yes"
    update: "yes"
    version: master
  loop: "{{ setup_shell_users | product(setup_shell_plugins) }}"
  loop_control:
    label: " Install {{ item.1.plugin }} for {{ item.0.user }}"
  become: true

- name: "Set up zshrc"
  ansible.builtin.copy:
    src: "{{ item.1 | regex_replace('^' + role_path + '/files/', '') }}"
    dest: "{{ item.0.home }}/{{ item.1 | regex_replace('^' + role_path + '/files/', '') }}"
    owner: "{{ item.0.user }}"
    group: "{{ item.0.user }}"
    mode: '755'
  loop: "{{ setup_shell_users | product(files.files | map(attribute='path') | list) }}"
  loop_control:
    label: " Set up {{ item.0.home }}/{{ item.1 | regex_replace('^' + role_path + '/files/', '') }} for {{ item.0.user }}"
  become: true

- name: Set up sudo PATH
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: '^Defaults\s+secure_path='
    line: 'Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/{{ user }}/.local/bin:/home/{{ user }}/.go/bin"'
    validate: 'visudo -cf %s'
  vars:
    user: "{{ ansible_env.USER }}"
  become: true
